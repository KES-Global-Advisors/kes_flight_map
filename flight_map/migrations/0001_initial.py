# Generated by Django 5.1.4 on 2025-04-10 10:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Roadmap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_roadmaps', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Strategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('tagline', models.CharField(blank=True, max_length=255, null=True)),
                ('vision', models.TextField()),
                ('time_horizon', models.DateField()),
                ('communication_leads', models.ManyToManyField(related_name='strategy_communication_leads', to=settings.AUTH_USER_MODEL)),
                ('executive_sponsors', models.ManyToManyField(related_name='strategy_executive_sponsors', to=settings.AUTH_USER_MODEL)),
                ('roadmap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strategies', to='flight_map.roadmap')),
                ('strategy_leads', models.ManyToManyField(related_name='strategy_leads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Strategy',
                'verbose_name_plural': 'Strategies',
                'ordering': ['-time_horizon'],
            },
        ),
        migrations.CreateModel(
            name='StrategicGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('business', 'Business Goal'), ('organizational', 'Organizational Goal')], max_length=20)),
                ('goal_text', models.TextField()),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='flight_map.strategy')),
            ],
            options={
                'ordering': ['category'],
                'unique_together': {('strategy', 'goal_text')},
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('vision', models.TextField(blank=True, null=True)),
                ('time_horizon', models.DateField(db_index=True)),
                ('executive_sponsors', models.ManyToManyField(related_name='program_executive_sponsors', to=settings.AUTH_USER_MODEL)),
                ('program_leads', models.ManyToManyField(related_name='program_leads', to=settings.AUTH_USER_MODEL)),
                ('workforce_sponsors', models.ManyToManyField(related_name='program_workforce_sponsors', to=settings.AUTH_USER_MODEL)),
                ('key_improvement_targets', models.ManyToManyField(blank=True, related_name='program_improvement_targets', to='flight_map.strategicgoal')),
                ('key_organizational_goals', models.ManyToManyField(blank=True, related_name='program_organizational_goals', to='flight_map.strategicgoal')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programs', to='flight_map.strategy')),
            ],
            options={
                'verbose_name': 'Program',
                'verbose_name_plural': 'Programs',
                'ordering': ['-time_horizon'],
            },
        ),
        migrations.CreateModel(
            name='Workstream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('vision', models.TextField(blank=True, null=True)),
                ('time_horizon', models.DateField()),
                ('improvement_targets', models.JSONField(default=list)),
                ('organizational_goals', models.JSONField(default=list)),
                ('color', models.CharField(default='#22d3ee', max_length=7)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workstreams', to='flight_map.program')),
                ('team_members', models.ManyToManyField(related_name='workstream_team_members', to=settings.AUTH_USER_MODEL)),
                ('workstream_leads', models.ManyToManyField(related_name='workstream_leads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Workstream',
                'verbose_name_plural': 'Workstreams',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('deadline', models.DateField(db_index=True)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed')], db_index=True, default='not_started', max_length=20)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dependencies', models.ManyToManyField(blank=True, help_text='Milestones that must be completed before this milestone can be achieved.', related_name='dependent_milestones', to='flight_map.milestone')),
                ('parent_milestone', models.ForeignKey(blank=True, help_text='The direct parent milestone that this milestone depends on.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_milestones', to='flight_map.milestone')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_milestones', to=settings.AUTH_USER_MODEL)),
                ('strategic_goals', models.ManyToManyField(blank=True, related_name='associated_milestones', to='flight_map.strategicgoal')),
                ('workstream', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='flight_map.workstream')),
            ],
            options={
                'verbose_name': 'Milestone',
                'verbose_name_plural': 'Milestones',
                'ordering': ['deadline'],
                'unique_together': {('workstream', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('priority', models.IntegerField(choices=[(1, 'High'), (2, 'Medium'), (3, 'Low')])),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed')], db_index=True, default='not_started', max_length=20)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('actual_start_date', models.DateField(blank=True, null=True)),
                ('delay_reason', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('impacted_employee_groups', models.JSONField(default=list)),
                ('change_leaders', models.JSONField(default=list)),
                ('development_support', models.JSONField(default=list)),
                ('external_resources', models.JSONField(default=list)),
                ('corporate_resources', models.JSONField(default=list)),
                ('target_start_date', models.DateField()),
                ('target_end_date', models.DateField(db_index=True)),
                ('parallel_activities', models.ManyToManyField(blank=True, related_name='parallel_with', to='flight_map.activity')),
                ('prerequisite_activities', models.ManyToManyField(blank=True, related_name='prerequisite_for', to='flight_map.activity')),
                ('successive_activities', models.ManyToManyField(blank=True, related_name='successor_to', to='flight_map.activity')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_activities', to=settings.AUTH_USER_MODEL)),
                ('additional_milestones', models.ManyToManyField(blank=True, help_text='Extra milestone connections (for sequential/parallel relationships).', related_name='additional_activities', to='flight_map.milestone')),
                ('milestone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities', to='flight_map.milestone')),
                ('supported_milestones', models.ManyToManyField(blank=True, help_text='Milestones (potentially in other workstreams) that this activity supports.', related_name='supported_by_activities', to='flight_map.milestone')),
                ('workstream', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='flight_map.workstream')),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
                'ordering': ['target_end_date'],
            },
        ),
        migrations.CreateModel(
            name='ActivityContributor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contributors', to='flight_map.activity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('activity', 'user')},
            },
        ),
        migrations.CreateModel(
            name='MilestoneContributor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('milestone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contributors', to='flight_map.milestone')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('milestone', 'user')},
            },
        ),
    ]
